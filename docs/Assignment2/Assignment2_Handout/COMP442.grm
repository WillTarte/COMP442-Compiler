<START> ::= <prog> 

<VarOrFuncAmb1> ::= <rept-variable2> 
<VarOrFuncAmb1> ::= '(' <aParams> ')' 

<aParams> ::= <expr> <rept-aParams1> 
<aParams> ::= EPSILON 

<aParamsTail> ::= ',' <expr> 

<addOp> ::= '+' 
<addOp> ::= '-' 
<addOp> ::= 'or' 

<arithExpr> ::= <term> <rightrec-arithExpr> 

<arraySize> ::= '[' <arraySizeAmb1> 

<arraySizeAmb1> ::= 'intNum' ']' 
<arraySizeAmb1> ::= ']' 

<assignOp> ::= '=' 

<assignStatOrFuncCall> ::= <rept-variable2> <assignOp> <expr> 
<assignStatOrFuncCall> ::= '(' <aParams> ')' 

<classDecl> ::= 'class' 'id' <opt-classDecl2> '{' <rept-classDecl8> '}' ';' 

<expr> ::= <arithExpr> <relExprAmb1> 

<fParams> ::= <type> 'id' <rept-fParams2> <rept-fParams3> 
<fParams> ::= EPSILON 

<fParamsTail> ::= ',' <type> 'id' <rept-fParamsTail3> 

<factor> ::= <rept-varfunc> 'id' <VarOrFuncAmb1> 
<factor> ::= 'intLit' 
<factor> ::= 'floatLit' 
<factor> ::= 'stringLit' 
<factor> ::= '(' <arithExpr> ')' 
<factor> ::= 'not' <factor> 
<factor> ::= <sign> <factor> 
<factor> ::= 'qm' '[' <expr> ':' <expr> ':' <expr> ']' 

<funcBody> ::= '{' <opt-funcBody1> <rept-funcBody7> '}' 

<funcDecl> ::= 'func' 'id' '(' <fParams> ')' ':' <funcDeclReturnType> ';' 

<funcDeclReturnType> ::= 'void' 
<funcDeclReturnType> ::= <type> 

<funcDef> ::= <funcHead> <funcBody> 

<funcHead> ::= 'func' 'id' <funcHeadAmb1> 

<funcHeadAmb1> ::= 'sr' 'id' '(' <fParams> ')' ':' <funcHeadReturnType> 
<funcHeadAmb1> ::= '(' <fParams> ')' ':' <funcHeadReturnType> 

<funcHeadReturnType> ::= <type> 
<funcHeadReturnType> ::= 'void' 

<idnestAmb1> ::= <rept-idnest1> 
<idnestAmb1> ::= '(' <aParams> ')' 

<indice> ::= '[' <arithExpr> ']' 

<memberDecl> ::= <funcDecl> 
<memberDecl> ::= <varDecl> 

<multOp> ::= '*' 
<multOp> ::= '/' 
<multOp> ::= 'and' 

<opt-classDecl2> ::= 'inherits' 'id' <rept-classDecl5> 
<opt-classDecl2> ::= EPSILON 

<opt-funcBody1> ::= 'var' '{' <rept-funcBody4> '}' 
<opt-funcBody1> ::= EPSILON 

<prog> ::= <rept-prog0> <rept-prog1> 'main' <funcBody> 

<relExpr> ::= <arithExpr> <relOp> <arithExpr> 

<relExprAmb1> ::= <relOp> <arithExpr> 
<relExprAmb1> ::= EPSILON 

<relOp> ::= 'eq' 
<relOp> ::= 'neq' 
<relOp> ::= 'lt' 
<relOp> ::= 'gt' 
<relOp> ::= 'leq' 
<relOp> ::= 'geq' 

<rept-aParams1> ::= <aParamsTail> <rept-aParams1> 
<rept-aParams1> ::= EPSILON 

<rept-classDecl5> ::= ',' 'id' <rept-classDecl5> 
<rept-classDecl5> ::= EPSILON 

<rept-classDecl8> ::= <visibility> <memberDecl> <rept-classDecl8> 
<rept-classDecl8> ::= EPSILON 

<rept-fParams2> ::= <arraySize> <rept-fParams2> 
<rept-fParams2> ::= EPSILON 

<rept-fParams3> ::= <fParamsTail> <rept-fParams3> 
<rept-fParams3> ::= EPSILON 

<rept-fParamsTail3> ::= <arraySize> <rept-fParamsTail3> 
<rept-fParamsTail3> ::= EPSILON 

<rept-funcBody4> ::= <varDecl> <rept-funcBody4> 
<rept-funcBody4> ::= EPSILON 

<rept-funcBody7> ::= <statement> <rept-funcBody7> 
<rept-funcBody7> ::= EPSILON 

<rept-idnest1> ::= <indice> <rept-idnest1> 
<rept-idnest1> ::= EPSILON 

<rept-prog0> ::= <classDecl> <rept-prog0> 
<rept-prog0> ::= EPSILON 

<rept-prog1> ::= <funcDef> <rept-prog1> 
<rept-prog1> ::= EPSILON 

<rept-statBlock1> ::= <statement> <rept-statBlock1> 
<rept-statBlock1> ::= EPSILON 

<rept-varDecl2> ::= <arraySize> <rept-varDecl2> 
<rept-varDecl2> ::= EPSILON 

<rept-varfunc> ::= 'id' <rept-varfuncAmb1> 

<rept-varfuncAmb1> ::= <idnestAmb1> '.' 
<rept-varfuncAmb1> ::= EPSILON 

<rept-variable2> ::= <indice> <rept-variable2> 
<rept-variable2> ::= EPSILON 

<rightrec-arithExpr> ::= EPSILON 
<rightrec-arithExpr> ::= <addOp> <term> <rightrec-arithExpr> 

<rightrec-term> ::= EPSILON 
<rightrec-term> ::= <multOp> <factor> <rightrec-term> 

<sign> ::= '+' 
<sign> ::= '-' 

<statBlock> ::= '{' <rept-statBlock1> '}' 
<statBlock> ::= <statement> 
<statBlock> ::= EPSILON 

<statement> ::= 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' 
<statement> ::= 'while' '(' <relExpr> ')' <statBlock> ';' 
<statement> ::= 'read' '(' <variable> ')' ';' 
<statement> ::= 'write' '(' <expr> ')' ';' 
<statement> ::= 'return' '(' <expr> ')' ';' 
<statement> ::= 'break' ';' 
<statement> ::= 'continue' ';' 
<statement> ::= <rept-varfunc> 'id' <assignStatOrFuncCall> ';' 

<term> ::= <factor> <rightrec-term> 

<type> ::= 'integer' 
<type> ::= 'float' 
<type> ::= 'string' 
<type> ::= 'id' 

<varDecl> ::= <type> 'id' <rept-varDecl2> ';' 

<variable> ::= <rept-varfunc> 'id' <rept-variable2> 

<visibility> ::= 'public' 
<visibility> ::= 'private' 
<visibility> ::= EPSILON 


