var searchIndex = JSON.parse('{\
"comp442_compiler":{"doc":"","i":[[3,"Opt","comp442_compiler","",null,null],[12,"file","","File to parse tokens from",0,null],[5,"main","","",null,[[]]],[0,"lexer","","Lexer implementation for the compiler",null,null],[3,"MyLexerAnalyzer","comp442_compiler::lexer","My Implementation of a Lexer Analyzer",null,null],[12,"input","","",1,null],[12,"idx","","",1,null],[12,"line_num","","",1,null],[3,"LexerInput","","Represents the input to be fed to a Lexer",null,null],[12,"0","","",2,null],[8,"LexerAnalyzer","","Interface for a Lexer Analyzer",null,null],[16,"TokenOutput","","",3,null],[10,"back","","moves the cursor back 1 character",3,[[]]],[10,"back_n","","moves the cursor back n characters",3,[[]]],[10,"forward","","moves the cursor forwards 1 character",3,[[]]],[10,"forward_n","","moves the cursor forwards n characters",3,[[]]],[10,"peek","","Returns the next character in the input stream without…",3,[[],["option",4]]],[10,"peek_n","","Returns the character n positions after the current…",3,[[],["option",4]]],[10,"next_char","","Returns the next character, advancing the lexer",3,[[],["option",4]]],[10,"next_token","","Returns the next token, advancing the lexer",3,[[],["option",4]]],[10,"skip_whitespace","","skips any whitespace at the beginning of the input",3,[[]]],[11,"from_str","","",1,[[]]],[11,"from_file","","Reads the content of a given file to build the `LexerInput`",1,[[["asref",8],["path",3]]]],[11,"from_str","","Builds a LexerInput from a String",2,[[]]],[11,"from_file","","Reads the content of a given file to build the `LexerInput`",2,[[["asref",8],["path",3]]]],[0,"token","comp442_compiler","Tokens used by the compiler",null,null],[3,"TokenFragment","comp442_compiler::token","A TokenFragment is a [TokenType] - lexeme pair",null,null],[12,"token_type","","",4,null],[12,"lexeme","","",4,null],[3,"Token","","Reprensents a full token, which includes a [TokenFragment]…",null,null],[12,"token_fragment","","",5,null],[12,"line_num","","",5,null],[4,"TokenType","","Represents the different types of tokens",null,null],[13,"Id","","",6,null],[13,"IntegerLit","","",6,null],[13,"FloatLit","","",6,null],[13,"StringLit","","",6,null],[13,"EqEq","","==",6,null],[13,"NotEq","","<>",6,null],[13,"GreaterThan","","",6,null],[13,"LessThan","","<",6,null],[13,"GreaterEqualThan","","=",6,null],[13,"LessEqualThan","","<=",6,null],[13,"Plus","","+",6,null],[13,"Minus","","-",6,null],[13,"Mult","","*",6,null],[13,"Div","","/",6,null],[13,"Assignment","","=",6,null],[13,"Or","","|",6,null],[13,"And","","&",6,null],[13,"Bang","","!",6,null],[13,"Question","","?",6,null],[13,"OpenParen","","(",6,null],[13,"CloseParen","",")",6,null],[13,"OpenCurly","","{",6,null],[13,"CloseCurly","","}",6,null],[13,"OpenSquare","","[",6,null],[13,"CloseSquare","","]",6,null],[13,"SemiColon","",";",6,null],[13,"Comma","",",",6,null],[13,"Period","",".",6,null],[13,"Colon","",":",6,null],[13,"DoubleColon","","::",6,null],[13,"If","","",6,null],[13,"Then","","",6,null],[13,"Else","","",6,null],[13,"IntegerType","","",6,null],[13,"FloatType","","",6,null],[13,"StringType","","",6,null],[13,"Void","","",6,null],[13,"Public","","",6,null],[13,"Private","","",6,null],[13,"Func","","",6,null],[13,"Var","","",6,null],[13,"Class","","",6,null],[13,"While","","",6,null],[13,"Read","","",6,null],[13,"Write","","",6,null],[13,"Return","","",6,null],[13,"Main","","",6,null],[13,"Inherits","","",6,null],[13,"Break","","",6,null],[13,"Continue","","",6,null],[13,"LineComment","","//",6,null],[13,"MultilineComment","","/* ~ */",6,null],[13,"Error","","",6,null],[4,"InvalidTokenType","","Reprensents the different types of invalid tokens",null,null],[13,"InvalidIdentifier","","",7,null],[13,"InvalidNumber","","",7,null],[13,"InvalidString","","",7,null],[13,"InvalidCharacter","","",7,null],[13,"InvalidMultilineComment","","",7,null],[11,"str_repr","","Returns a Regex representing this token type",6,[[],["regex",3]]],[11,"new","","",4,[[["tokentype",4]]]],[11,"from_lexeme","","Tries to match a given lexeme with each [TokenType]\'s…",4,[[]]],[11,"new","","",5,[[["tokenfragment",3]]]],[11,"is_err","","Returns true if this token is an error token",5,[[]]],[11,"token_type","","Returns this token\'s [TokenType]",5,[[],["tokentype",4]]],[11,"lexeme","","Returns this token\'s lexeme",5,[[]]],[0,"token_regex","comp442_compiler","Regular Expressions useful to parse tokens",null,null],[3,"ID","comp442_compiler::token_regex","",null,null],[12,"__private_field","","",8,null],[3,"INT_LIT","","",null,null],[12,"__private_field","","",9,null],[3,"FLOAT_LIT","","",null,null],[12,"__private_field","","",10,null],[3,"STRING_LIT","","",null,null],[12,"__private_field","","",11,null],[3,"EQEQ","","",null,null],[12,"__private_field","","",12,null],[3,"NOTEQ","","",null,null],[12,"__private_field","","",13,null],[3,"LT","","",null,null],[12,"__private_field","","",14,null],[3,"GT","","",null,null],[12,"__private_field","","",15,null],[3,"LTEQ","","",null,null],[12,"__private_field","","",16,null],[3,"GTEQ","","",null,null],[12,"__private_field","","",17,null],[3,"PLUS","","",null,null],[12,"__private_field","","",18,null],[3,"MINUS","","",null,null],[12,"__private_field","","",19,null],[3,"MULT","","",null,null],[12,"__private_field","","",20,null],[3,"FSLASH","","",null,null],[12,"__private_field","","",21,null],[3,"ASSIGN","","",null,null],[12,"__private_field","","",22,null],[3,"OR","","",null,null],[12,"__private_field","","",23,null],[3,"AND","","",null,null],[12,"__private_field","","",24,null],[3,"BANG","","",null,null],[12,"__private_field","","",25,null],[3,"QUESTION","","",null,null],[12,"__private_field","","",26,null],[3,"OPENPAREN","","",null,null],[12,"__private_field","","",27,null],[3,"CLOSEPAREN","","",null,null],[12,"__private_field","","",28,null],[3,"OPENCURLY","","",null,null],[12,"__private_field","","",29,null],[3,"CLOSECURLY","","",null,null],[12,"__private_field","","",30,null],[3,"OPENSQUARE","","",null,null],[12,"__private_field","","",31,null],[3,"CLOSESQUARE","","",null,null],[12,"__private_field","","",32,null],[3,"SEMICOLON","","",null,null],[12,"__private_field","","",33,null],[3,"COMMA","","",null,null],[12,"__private_field","","",34,null],[3,"PERIOD","","",null,null],[12,"__private_field","","",35,null],[3,"COLON","","",null,null],[12,"__private_field","","",36,null],[3,"DBCOLON","","",null,null],[12,"__private_field","","",37,null],[3,"IF","","",null,null],[12,"__private_field","","",38,null],[3,"THEN","","",null,null],[12,"__private_field","","",39,null],[3,"ELSE","","",null,null],[12,"__private_field","","",40,null],[3,"INT_T","","",null,null],[12,"__private_field","","",41,null],[3,"FLOAT_T","","",null,null],[12,"__private_field","","",42,null],[3,"STRING_T","","",null,null],[12,"__private_field","","",43,null],[3,"VOID","","",null,null],[12,"__private_field","","",44,null],[3,"PUBLIC","","",null,null],[12,"__private_field","","",45,null],[3,"PRIVATE","","",null,null],[12,"__private_field","","",46,null],[3,"FUNC","","",null,null],[12,"__private_field","","",47,null],[3,"VAR","","",null,null],[12,"__private_field","","",48,null],[3,"CLASS","","",null,null],[12,"__private_field","","",49,null],[3,"WHILE","","",null,null],[12,"__private_field","","",50,null],[3,"READ","","",null,null],[12,"__private_field","","",51,null],[3,"WRITE","","",null,null],[12,"__private_field","","",52,null],[3,"RETURN","","",null,null],[12,"__private_field","","",53,null],[3,"MAIN","","",null,null],[12,"__private_field","","",54,null],[3,"INHERITS","","",null,null],[12,"__private_field","","",55,null],[3,"BREAK","","",null,null],[12,"__private_field","","",56,null],[3,"CONTINUE","","",null,null],[12,"__private_field","","",57,null],[3,"LINE_COMMENT","","",null,null],[12,"__private_field","","",58,null],[3,"MULTILINE_COMMENT","","",null,null],[12,"__private_field","","",59,null],[3,"ERROR","","",null,null],[12,"__private_field","","",60,null],[0,"utils","comp442_compiler","Utilities for the compiler",null,null],[0,"lexer","comp442_compiler::utils","Contains utility methods used by the lexer implementation…",null,null],[5,"is_valid_character","comp442_compiler::utils::lexer","Checks if a given character is part of some valid…",null,[[]]],[5,"parse_kw_or_id","","Parses an input string into a keyword or an identifier. If…",null,[[],["tokenfragment",3]]],[5,"parse_number","","Parses an input string into a number (float or int) If the…",null,[[],["tokenfragment",3]]],[5,"parse_op_or_punct","","Parses an input string into an operator or punctuation…",null,[[],["tokenfragment",3]]],[5,"parse_string","","Parses an input string into a string literal If the input…",null,[[],["tokenfragment",3]]],[17,"VALID_CHARS","","",null,null],[0,"lexer_serialize","comp442_compiler::utils","Utilities to serialize a lexer\'s output",null,null],[5,"serialize_lexer_to_file","comp442_compiler::utils::lexer_serialize","",null,[[["box",3],["lexeranalyzer",8]],["result",6]]],[11,"from","comp442_compiler","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","comp442_compiler::lexer","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","comp442_compiler::token","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","comp442_compiler::token_regex","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"back","comp442_compiler::lexer","",1,[[]]],[11,"back_n","","",1,[[]]],[11,"forward","","",1,[[]]],[11,"forward_n","","",1,[[]]],[11,"peek","","",1,[[],["option",4]]],[11,"peek_n","","",1,[[],["option",4]]],[11,"next_char","","",1,[[],["option",4]]],[11,"next_token","","",1,[[],["option",4]]],[11,"skip_whitespace","","",1,[[]]],[11,"clone","comp442_compiler::token","",6,[[],["tokentype",4]]],[11,"clone","","",7,[[],["invalidtokentype",4]]],[11,"clone","","",4,[[],["tokenfragment",3]]],[11,"clone","","",5,[[],["token",3]]],[11,"eq","","",6,[[["tokentype",4]]]],[11,"ne","","",6,[[["tokentype",4]]]],[11,"eq","","",7,[[["invalidtokentype",4]]]],[11,"eq","","",4,[[["tokenfragment",3]]]],[11,"ne","","",4,[[["tokenfragment",3]]]],[11,"eq","","",5,[[["token",3]]]],[11,"ne","","",5,[[["token",3]]]],[11,"to_string","","",7,[[],["string",3]]],[11,"deref","comp442_compiler::token_regex","",8,[[],["regex",3]]],[11,"deref","","",9,[[],["regex",3]]],[11,"deref","","",10,[[],["regex",3]]],[11,"deref","","",11,[[],["regex",3]]],[11,"deref","","",12,[[],["regex",3]]],[11,"deref","","",13,[[],["regex",3]]],[11,"deref","","",14,[[],["regex",3]]],[11,"deref","","",15,[[],["regex",3]]],[11,"deref","","",16,[[],["regex",3]]],[11,"deref","","",17,[[],["regex",3]]],[11,"deref","","",18,[[],["regex",3]]],[11,"deref","","",19,[[],["regex",3]]],[11,"deref","","",20,[[],["regex",3]]],[11,"deref","","",21,[[],["regex",3]]],[11,"deref","","",22,[[],["regex",3]]],[11,"deref","","",23,[[],["regex",3]]],[11,"deref","","",24,[[],["regex",3]]],[11,"deref","","",25,[[],["regex",3]]],[11,"deref","","",26,[[],["regex",3]]],[11,"deref","","",27,[[],["regex",3]]],[11,"deref","","",28,[[],["regex",3]]],[11,"deref","","",29,[[],["regex",3]]],[11,"deref","","",30,[[],["regex",3]]],[11,"deref","","",31,[[],["regex",3]]],[11,"deref","","",32,[[],["regex",3]]],[11,"deref","","",33,[[],["regex",3]]],[11,"deref","","",34,[[],["regex",3]]],[11,"deref","","",35,[[],["regex",3]]],[11,"deref","","",36,[[],["regex",3]]],[11,"deref","","",37,[[],["regex",3]]],[11,"deref","","",38,[[],["regex",3]]],[11,"deref","","",39,[[],["regex",3]]],[11,"deref","","",40,[[],["regex",3]]],[11,"deref","","",41,[[],["regex",3]]],[11,"deref","","",42,[[],["regex",3]]],[11,"deref","","",43,[[],["regex",3]]],[11,"deref","","",44,[[],["regex",3]]],[11,"deref","","",45,[[],["regex",3]]],[11,"deref","","",46,[[],["regex",3]]],[11,"deref","","",47,[[],["regex",3]]],[11,"deref","","",48,[[],["regex",3]]],[11,"deref","","",49,[[],["regex",3]]],[11,"deref","","",50,[[],["regex",3]]],[11,"deref","","",51,[[],["regex",3]]],[11,"deref","","",52,[[],["regex",3]]],[11,"deref","","",53,[[],["regex",3]]],[11,"deref","","",54,[[],["regex",3]]],[11,"deref","","",55,[[],["regex",3]]],[11,"deref","","",56,[[],["regex",3]]],[11,"deref","","",57,[[],["regex",3]]],[11,"deref","","",58,[[],["regex",3]]],[11,"deref","","",59,[[],["regex",3]]],[11,"deref","","",60,[[],["regex",3]]],[11,"fmt","comp442_compiler::token","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","comp442_compiler","",0,[[["formatter",3]],["result",6]]],[11,"initialize","comp442_compiler::token_regex","",8,[[]]],[11,"initialize","","",9,[[]]],[11,"initialize","","",10,[[]]],[11,"initialize","","",11,[[]]],[11,"initialize","","",12,[[]]],[11,"initialize","","",13,[[]]],[11,"initialize","","",14,[[]]],[11,"initialize","","",15,[[]]],[11,"initialize","","",16,[[]]],[11,"initialize","","",17,[[]]],[11,"initialize","","",18,[[]]],[11,"initialize","","",19,[[]]],[11,"initialize","","",20,[[]]],[11,"initialize","","",21,[[]]],[11,"initialize","","",22,[[]]],[11,"initialize","","",23,[[]]],[11,"initialize","","",24,[[]]],[11,"initialize","","",25,[[]]],[11,"initialize","","",26,[[]]],[11,"initialize","","",27,[[]]],[11,"initialize","","",28,[[]]],[11,"initialize","","",29,[[]]],[11,"initialize","","",30,[[]]],[11,"initialize","","",31,[[]]],[11,"initialize","","",32,[[]]],[11,"initialize","","",33,[[]]],[11,"initialize","","",34,[[]]],[11,"initialize","","",35,[[]]],[11,"initialize","","",36,[[]]],[11,"initialize","","",37,[[]]],[11,"initialize","","",38,[[]]],[11,"initialize","","",39,[[]]],[11,"initialize","","",40,[[]]],[11,"initialize","","",41,[[]]],[11,"initialize","","",42,[[]]],[11,"initialize","","",43,[[]]],[11,"initialize","","",44,[[]]],[11,"initialize","","",45,[[]]],[11,"initialize","","",46,[[]]],[11,"initialize","","",47,[[]]],[11,"initialize","","",48,[[]]],[11,"initialize","","",49,[[]]],[11,"initialize","","",50,[[]]],[11,"initialize","","",51,[[]]],[11,"initialize","","",52,[[]]],[11,"initialize","","",53,[[]]],[11,"initialize","","",54,[[]]],[11,"initialize","","",55,[[]]],[11,"initialize","","",56,[[]]],[11,"initialize","","",57,[[]]],[11,"initialize","","",58,[[]]],[11,"initialize","","",59,[[]]],[11,"initialize","","",60,[[]]],[11,"clap","comp442_compiler","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"MyLexerAnalyzer"],[3,"LexerInput"],[8,"LexerAnalyzer"],[3,"TokenFragment"],[3,"Token"],[4,"TokenType"],[4,"InvalidTokenType"],[3,"ID"],[3,"INT_LIT"],[3,"FLOAT_LIT"],[3,"STRING_LIT"],[3,"EQEQ"],[3,"NOTEQ"],[3,"LT"],[3,"GT"],[3,"LTEQ"],[3,"GTEQ"],[3,"PLUS"],[3,"MINUS"],[3,"MULT"],[3,"FSLASH"],[3,"ASSIGN"],[3,"OR"],[3,"AND"],[3,"BANG"],[3,"QUESTION"],[3,"OPENPAREN"],[3,"CLOSEPAREN"],[3,"OPENCURLY"],[3,"CLOSECURLY"],[3,"OPENSQUARE"],[3,"CLOSESQUARE"],[3,"SEMICOLON"],[3,"COMMA"],[3,"PERIOD"],[3,"COLON"],[3,"DBCOLON"],[3,"IF"],[3,"THEN"],[3,"ELSE"],[3,"INT_T"],[3,"FLOAT_T"],[3,"STRING_T"],[3,"VOID"],[3,"PUBLIC"],[3,"PRIVATE"],[3,"FUNC"],[3,"VAR"],[3,"CLASS"],[3,"WHILE"],[3,"READ"],[3,"WRITE"],[3,"RETURN"],[3,"MAIN"],[3,"INHERITS"],[3,"BREAK"],[3,"CONTINUE"],[3,"LINE_COMMENT"],[3,"MULTILINE_COMMENT"],[3,"ERROR"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);